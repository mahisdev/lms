---
- name: Create AWS instances
  hosts: localhost
  connection: local
  gather_facts: false 
  vars: 
    project_name: Life_insu
    aws_region: us-east-1

  tasks:
    - name: Create an EC2 key
      ec2_key:
        name: "{{project_name}}-key"
        region: "{{ aws_region }}"
      register: key

    - name: Save Private key
      copy: content="{{key.private_key}}" dest="./aws-private.pem" mode=0600
      when: key.changed

    - name: Security Group Create
      ec2_group: 
        name: "{{project_name}}_sec_group"
        description: "{{project_name}} Security group"
        region: "{{ aws_region }}"
        rules: 
          - proto: tcp
            type: ssh
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            type: http
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            type: https
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            type: all
            cidr_ip: 0.0.0.0/0
      register: sec_group

    - name: Spin two ec2 instances 
      ec2:
        key_name: "{{project_name}}-key"
        group_id: "{{sec_group.group_id}}" 
        region: "{{ aws_region }}"
        instance_type: 
        image: 
        wait: yes
        instance_tags: 
          app: web-app
        count_tag: app
        exact_count: 2
      register: ec2

    - name: Save ip to the inventory file
      copy: content="([webservers]{{'\n'}}{{ item.public_ip }})" dest=./hosts 
      with_items: ec2.tagged_instances

    - name: Add ip to ec2_hosts group
      add_host: hostname={{ item.public_ip }} groups=ec2_hosts
      with_items: ec2.tagged_instances

    - name: Create Load balancer
      ec2_elb_lb: 
        name: "{{project_name}}-ELB"
        state: present
        region: "{{ aws_region }}"
        security_group_ids: "{{sec_group.group_id}}"
        listners: 
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: elb

    - name: add the servers to load balancer
      local_action: ec2_elb
      args: 
        instance_id: "{{item.id }}"
        ec2_elbs: "{{project_name}}-ELB"
        state: present
        region: "{{ aws_region }}"
      with_items: ec2.tagged_instances



    - name: 
